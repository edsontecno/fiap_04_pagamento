name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Coverage tests
        run: mvn clean verify jacoco:report

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner -Dsonar.login=$SONAR_TOKEN
  image:
    runs-on: ubuntu-latest
    needs: build-and-test   
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/payment:latest
            ${{ secrets.DOCKER_USERNAME }}/payment:${{ github.sha }}

      - name: Logout from Docker Hub
        run: docker logout      
  deploy:
    runs-on: ubuntu-latest 
    needs: image     
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACADEMY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACADEMY_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_ACADEMY_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_ACADEMY_REGION_DEFAULT }}  
      
      - name: Update Kube Config
        run: aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_ACADEMY_REGION_DEFAULT }}

      - name: Deploy EKS
        run: |
          kubectl delete secret db-credentials --ignore-not-found
          kubectl create secret generic db-credentials --from-literal=mercadopago_token=${{ secrets.ENV_MERCADOPAGO_TOKEN}} --from-literal=aws_accesskey=${{ secrets.AWS_ACADEMY_ACCESS_KEY_ID}} --from-literal=aws_secretkey=${{ secrets.AWS_ACADEMY_SECRET_ACCESS_KEY}} --from-literal=pedido=${{ secrets.URL_PEDIDO}} --from-literal=db=${{ secrets.DB_HOST}} --from-literal=session_token=${{ secrets.AWS_ACADEMY_SESSION_TOKEN}}
          kubectl apply -f ./k8s/deployment-app.yml
          kubectl apply -f ./k8s/service-app.yml    
          kubectl apply -f ./k8s/hpa.yml    

      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/payment payment=${{ secrets.DOCKER_USERNAME }}/payment:${{ github.sha }} --record       